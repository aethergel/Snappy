name: Build and Release
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup .NET SDK 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: Download Dalamud Stubs
        run: Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip; Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
        shell: pwsh
      - name: Build Plugin and Package
        run: dotnet build Snappy/Snappy.csproj -c Release --nologo
        shell: pwsh
      - name: Update repo.json
        id: prep
        run: |
          # Extract version from the .csproj file
          $version = (Select-Xml -Path Snappy/Snappy.csproj -XPath "/Project/PropertyGroup/Version").Node.InnerText
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          $repoJsonPath = "./repo.json"
          $repoJson = Get-Content -Path $repoJsonPath -Raw | ConvertFrom-Json

          # Ensure we're working with an array (PowerShell converts single-item arrays to objects)
          if ($repoJson -isnot [System.Array]) {
              $repoJson = @($repoJson)
          }

          # Access the first plugin definition in the array
          $repoJson[0].AssemblyVersion = $version
          $repoJson[0].LastUpdate = [int64](([datetimeoffset](Get-Date)).ToUnixTimeSeconds())
          $repoJson[0].DownloadLinkInstall = "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/latest.zip"
          $repoJson[0].DownloadLinkTesting = $repoJson[0].DownloadLinkInstall
          $repoJson[0].DownloadLinkUpdate = $repoJson[0].DownloadLinkInstall

          # Convert back to JSON with proper array formatting
          $jsonOutput = ConvertTo-Json $repoJson -Depth 5 -Compress:$false
          # Ensure proper formatting and write to file
          $jsonOutput | Set-Content -Path $repoJsonPath -Encoding UTF8
        shell: pwsh
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release for version ${{ steps.prep.outputs.version }}"
          files: Snappy/bin/Release/Snappy/latest.zip
      - name: Commit updated repo.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout ${{ github.event.repository.default_branch }}
          git add repo.json
          git diff --staged --quiet || git commit -m "Update repo.json for ${{ github.ref_name }}"
          git push
        shell: bash
